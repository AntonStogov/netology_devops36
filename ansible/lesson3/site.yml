---
- name: Install and configure Lighthouse
  hosts: lighthouse
  gather_facts: false
  remote_user: sysad
  tags: lighthouse

  handlers:
    - name: Start Lighthouse service
      become: true
      ansible.builtin.systemd:
        daemon_reload: true
        enabled: false
        name: nginx.service
        state: restarted

  tasks:
    - name: Install, configure, and start Lighthouse
      block:
        - name: Pre-install Nginx & Git client
          become: true
          ansible.builtin.apt:
            name: "{{ lighthouse_packages }}"
            update_cache: true

        - name: Clone Lighthouse source code by Git
          become: true
          block:
            - name: Check if git repository already exists
              ansible.builtin.stat:
                path: "{{ lighthouse_data_dir }}/.git"
              register: git_repo

            - name: Clone Lighthouse repository
              ansible.builtin.git:
                repo: "{{ lighthouse_code_src }}"
                version: "{{ lighthouse_code_src_version }}"
                dest: "{{ lighthouse_data_dir }}"
                force: false
              when: not git_repo.stat.exists  # Выполняем только если репозиторий отсутствует

        - name: Prepare nginx config
          become: true
          ansible.builtin.template:
            src: "templates/lighthouse_config.j2"
            dest: "/etc/nginx/conf.d/{{ lighthouse_nginx_conf }}"
            mode: "0644"
            owner: root
            group: root
          notify: Start Lighthouse service

- name: Install and configure ClickHouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.systemd:
        name: clickhouse-server
        state: restarted

  tasks:
    - name: Download ClickHouse distribution packages
      block:
        - name: Get ClickHouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/deb/pool/main/c/{{ item }}/{{ item }}_{{ clickhouse_version }}_all.deb"
            dest: "./{{ item }}_{{ clickhouse_version }}.deb"
            mode: '0644'
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse common-static distrib as fallback
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/deb/pool/main/c/clickhouse-common-static/clickhouse-common-static_{{ clickhouse_version }}_amd64.deb"
            dest: "./clickhouse-common-static_{{ clickhouse_version }}.deb"
            mode: '0644'

    - name: Install ClickHouse packages
      become: true
      ansible.builtin.apt:
        deb: "./{{ item }}_{{ clickhouse_version }}.deb"
        state: present
      loop: "{{ clickhouse_packages }}"
      notify: Start clickhouse service

    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'CREATE DATABASE IF NOT EXISTS logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc != 82
      changed_when: create_db.rc == 0

    - name: Create table for Vector data
      ansible.builtin.command: >
        clickhouse-client -q
        "CREATE TABLE IF NOT EXISTS logs.syslog_data (
        timestamp DateTime,
        message String,
        host String,
        severity String
        ) ENGINE = MergeTree() ORDER BY timestamp;"
      register: create_table
      failed_when: create_table.rc != 0 and create_table.rc != 82
      changed_when: create_table.rc == 0

    - name: Ensure ClickHouse listens on all interfaces
      become: true
      ansible.builtin.lineinfile:
        path: /etc/clickhouse-server/config.xml
        regexp: '<listen_host>.*</listen_host>'
        line: '<listen_host>0.0.0.0</listen_host>'
        state: present
        backup: true

    - name: Restart ClickHouse server to apply changes
      become: true
      ansible.builtin.systemd:
        name: clickhouse-server
        state: restarted
      notify: Start clickhouse service

- name: Install and configure Vector
  hosts: vector
  handlers:
    - name: Restart vector service
      become: true
      ansible.builtin.systemd:
        name: vector
        state: restarted

  tasks:
    - name: Download Vector
      ansible.builtin.get_url:
        url: "https://packages.timber.io/vector/{{ vector_version }}/vector_{{ vector_version }}-1_amd64.deb"
        dest: "/tmp/vector-{{ vector_version }}.deb"
        mode: '0644'

    - name: Install Vector
      become: true
      ansible.builtin.apt:
        deb: "/tmp/vector-{{ vector_version }}.deb"
        state: present

    - name: Ensure vector directory exists
      become: true
      ansible.builtin.file:
        path: "{{ vector_workdir }}"
        state: directory
        mode: '0755'

    - name: Deploy Vector configuration
      ansible.builtin.template:
        src: templates/vector_config.j2
        dest: "{{ vector_workdir }}/vector.toml"
        mode: '0644'
      become: true
      notify: Restart vector service
